// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  name       String
  created_at DateTime @default(now())
  public_id  String   @unique @default(uuid())
  posts      Post[]
  comments   Comment[]
  likes      Like[]
}

model Post {
  id         Int       @id @default(autoincrement())
  photo      String?
  content    String
  created_at DateTime  @default(now())
  user_id    Int
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  comments   Comment[]
  likes      Like[]
}

model Comment {
  id           Int      @id @default(autoincrement())
  comment_text String
  created_at   DateTime @default(now())
  post_id      Int
  user_id      Int
  post         Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  user         User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Like {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  user_id    Int
  post_id    Int
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  post       Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  @@unique([user_id, post_id])
}
